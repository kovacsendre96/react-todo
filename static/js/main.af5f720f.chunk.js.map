{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["Form","input","setInput","list","setList","FormStyled","onSubmit","e","preventDefault","alert","task","id","uuidv4","did","className","placeholder","onKeyUp","value","onChange","target","type","icon","faPlus","styled","form","Todo","listItem","TodoItem","contenteditable","onClick","map","m","faCheckCircle","filter","f","faTrash","div","TodoList","ListWrapper","App","useState","MainContainer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8uDAOA,IAwCmBA,EAxCN,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,KAAKC,EAAY,EAAZA,QA2BjC,OAEI,eAACC,EAAD,CAAYC,SApBM,SAACC,GACnBA,EAAEC,iBACQ,IAAPP,EAAWQ,MAAO,yBAEjBL,EAAQ,GAAD,mBAAKD,GAAL,CAAU,CAACO,KAAKT,EAAOU,GAAGC,cAAUC,KAAI,MAGnDX,EAAS,KAa4BY,UAAU,OAA/C,UACI,uBAAOC,YAAY,kBAAkBC,QAAS,SAACT,KAAkBU,MAAOhB,EAAOiB,SA3BlE,SAACX,GAClBL,EAASK,EAAEY,OAAOF,QA0ByFG,KAAK,SAC5G,mCAAS,cAAC,IAAD,CAAiBC,KAAMC,MAAhC,WAYFjB,EAAakB,IAAOC,KAAV,K,quBC5CpB,IA+CeC,EA/CF,SAAC,GAA+B,IAA7BtB,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,QAAQsB,EAAc,EAAdA,SAgC1B,OAGI,eAACC,EAAD,CAAUb,UAAU,YAApB,UACQ,mBAAGc,gBAAgB,OAAQd,UAAWY,EAASb,IAAM,OAAS,KAA9D,SAAqEa,EAAShB,OAC9E,gCACI,wBAAQmB,QAnCX,WAETzB,EACID,EAAK2B,KAAI,SAACC,GACN,OAAGA,EAAEpB,KAAOe,EAASf,GACjB,2BACOoB,GADP,IACUlB,KAAMkB,EAAElB,MAGfkB,OA0BH,SAAuB,cAAC,IAAD,CAAiBV,KAAMW,QAC9C,wBAAQH,QAfT,WAEXzB,EAAQD,EAAK8B,QAAO,SAACC,GAAD,OAAOA,EAAEvB,KAAOe,EAASf,QAajC,SAA0B,cAAC,IAAD,CAAiBU,KAAMc,eAW/DR,EAAWJ,IAAOa,IAAV,K,kVCpDd,IA6BmBC,EA7BF,SAAC,GAA+B,IAA9BlC,EAA6B,EAA7BA,KAAgBC,GAAa,EAAvBsB,SAAuB,EAAbtB,SAG/B,OAEA,cAACkC,EAAD,CAAaxB,UAAU,gBAAvB,SAGIX,EAAK2B,KAAI,SAACJ,GAAD,OACT,cAAC,EAAD,CAGAtB,QAASA,EACTD,KAAMA,EACNuB,SAAUA,GAHLA,EAASf,UAqBZ2B,EAAcf,IAAOa,IAAV,K,gMCANG,MA9Bf,WAAgB,IAAD,EAEQC,mBAAS,IAFjB,mBAERvC,EAFQ,KAEFC,EAFE,OAGMsC,mBAAS,IAHf,mBAGRrC,EAHQ,KAGHC,EAHG,KAQX,OAEA,eAACqC,EAAD,CAAe3B,UAAU,MAAzB,UACI,cAAC,EAAD,CACAb,MAAOA,EACPC,SAAUA,EACVC,KAAMA,EACNC,QAASA,IAGT,cAAC,EAAD,CACAD,KAAMA,EACNC,QAASA,QAaXqC,EAAgBlB,IAAOa,IAAV,KCjCnBM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.af5f720f.chunk.js","sourcesContent":["import React from 'react';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport styled from 'styled-components';\r\nimport {faPlus} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\nconst Form = ({input, setInput, list,setList}) =>{\r\n\r\n\r\n    const inputHandler = (e) =>{\r\n        setInput(e.target.value)\r\n    };\r\n\r\n\r\n\r\n    const submitHandler = (e) =>{\r\n        e.preventDefault();\r\n        if(input==''){alert (\"Please enter a to do!\")}\r\n        else{\r\n            setList([...list,{task:input ,id:uuidv4(), did:false }])\r\n\r\n        }\r\n        setInput('')\r\n    };\r\n\r\n\r\n\r\n    const onKeyUp = () => {\r\n      \r\n      };\r\n\r\n      \r\n\r\n    return(\r\n\r\n        <FormStyled onSubmit={submitHandler} className='Form'>\r\n            <input placeholder=\"Type your to do\" onKeyUp={(e) => onKeyUp(e)} value={input} onChange={inputHandler} type='text' ></input>\r\n            <button ><FontAwesomeIcon icon={faPlus}/> </button>\r\n        </FormStyled>\r\n\r\n\r\n    )\r\n\r\n\r\n    }\r\n\r\n    export default Form;\r\n\r\n\r\n    const FormStyled = styled.form`\r\n        width:100%;\r\n        height:80px;\r\n        background:#FFAA1B;\r\n        display:flex;\r\n        justify-content:space-around;\r\n        align-items:center;\r\n        border-radius:25px 25px 0 0;\r\n\r\n        input{\r\n            height:50%;\r\n            width:200px;\r\n            border-radius:10px;\r\n            border:none;\r\n            background:#FFC95E;\r\n            color:white;\r\n            text-align:center;\r\n\r\n            &::placeholder{\r\n                color:white;\r\n                text-align:center;\r\n                opacity:0.7;\r\n            }\r\n\r\n            &:focus{\r\n                border-bottom: 3px solid;\r\n                border-bottom-color: #ffffff;  \r\n            }\r\n\r\n            @media (min-width:900px){\r\n    width:400px;\r\n}\r\n         \r\n        }\r\n\r\n        button{\r\n            color: #fff;\r\n            text-transform: uppercase;\r\n            text-decoration: none;\r\n            background: #3fce37;\r\n            padding: 15px;\r\n            border-radius: 20px;\r\n            display: inline-block;\r\n            border: none;\r\n            transition: all 0.4s ease 0s;\r\n            cursor: pointer;\r\n\r\n                &:hover {\r\n                text-shadow: 0px 0px 6px rgba(255, 255, 255, 1);\r\n                -webkit-box-shadow: 0px 5px 40px -10px rgba(0,0,0,0.57);\r\n                -moz-box-shadow: 0px 5px 40px -10px rgba(0,0,0,0.57);\r\n                transition: all 0.4s ease 0s;\r\n            }\r\n        }\r\n    `;\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport '../style/style.css'\r\nimport {faCheckCircle,faTrash} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport styled from 'styled-components';\r\n\r\nconst Todo = ({ list, setList,listItem}) => {\r\n\r\n\r\n    const done = () => {\r\n\r\n        setList(\r\n            list.map((m)=>{\r\n                if(m.id === listItem.id){\r\n                    return{\r\n                        ...m, did: !m.did\r\n                    }\r\n                }\r\n                return m                    \r\n            })\r\n\r\n\r\n        ) \r\n        \r\n  \r\n        \r\n        \r\n        \r\n    }\r\n\r\n    const remove = () => {\r\n\r\n        setList(list.filter((f) => f.id !== listItem.id))\r\n       \r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n\r\n        <TodoItem className='todo-item'>\r\n                <p contenteditable=\"true\"  className={listItem.did ? 'done' : null}>{listItem.task}</p>\r\n                <div>\r\n                    <button onClick={done}><FontAwesomeIcon icon={faCheckCircle} /></button>\r\n                    <button onClick={remove} ><FontAwesomeIcon icon={faTrash} /></button>\r\n                </div>\r\n        </TodoItem>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Todo;\r\n\r\n\r\nconst TodoItem = styled.div`\r\n    width:100%;\r\n    height:50px;\r\n    display:flex;\r\n    justify-content:space-around;\r\n    align-items:center;\r\n    background:#5C5C5C;\r\n    color:white;\r\n    border:1px solid white;\r\n    transition:0.4s;\r\n    &:hover{\r\n        background:#909090;\r\n        button{\r\n           \r\n        background:#909090;\r\n    }\r\n        \r\n    }\r\n    p{\r\n        width:50%;\r\n        text-align:center;\r\n    }\r\n    div{\r\n        width:50%;\r\n            text-align:center;\r\n        button{\r\n            color:#FFAA1B;\r\n            background:#5C5C5C ;\r\n            border:none;\r\n            font-size:1.5rem;\r\n            transition:0.4s;\r\n         \r\n        }\r\n    }\r\n\r\n`;","import React from 'react';\r\nimport Todo from './Todo';\r\nimport styled from 'styled-components';\r\n\r\nconst TodoList = ({list ,listItem, setList,}) =>{\r\n\r\n\r\n    return(\r\n    \r\n    <ListWrapper className='todo__wrapper'>\r\n\r\n       \r\n       {list.map((listItem)=>(\r\n        <Todo\r\n\r\n        key={listItem.id}\r\n        setList={setList}\r\n        list={list}\r\n        listItem={listItem}\r\n       \r\n      \r\n        />\r\n        \r\n       ))}\r\n       \r\n        \r\n    \r\n    </ListWrapper>\r\n    \r\n    )\r\n    \r\n    }\r\n    \r\n    export default TodoList;\r\n\r\n\r\n    const ListWrapper = styled.div`\r\n      height:450px;\r\n      border:2px solid #FFAA1B;\r\n      overflow-y:scroll;\r\n      border-radius:0 0 25px 25px;\r\n      background:#909090;\r\n    &::-webkit-scrollbar{\r\n      display:none;\r\n      \r\n    }\r\n    @media (min-width:900px){\r\n    height:600px;\r\n}\r\n\r\n\r\n    `;","import React, {useState} from 'react';\r\nimport Form from './components/Form';\r\nimport TodoList from './components/TodoList';\r\nimport styled from 'styled-components';\r\n\r\n\r\nfunction App (){\r\n\r\nconst [input,setInput]=useState('');\r\nconst [list,setList]=useState([]);\r\n\r\n\r\n\r\n\r\n    return(\r\n        \r\n    <MainContainer className='App'>\r\n        <Form\r\n        input={input}\r\n        setInput={setInput}\r\n        list={list}\r\n        setList={setList}\r\n         />\r\n\r\n        <TodoList \r\n        list={list} \r\n        setList={setList}\r\n        \r\n        />\r\n\r\n    </MainContainer>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default App;\r\n\r\n\r\nconst MainContainer = styled.div`\r\n\r\nmargin: 0 auto 0 auto;\r\n\r\n@media (min-width:900px){\r\n    width:80%;\r\n}\r\n@media (min-width:1200px){\r\n    width:70%;\r\n}\r\n`;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n  "],"sourceRoot":""}